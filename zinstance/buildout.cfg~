############################################
#
# Buildout Configuration File for Plone
# -------------------------------------
#
# ALWAYS back up all Plone/Zope data and components
# before changing configuration.
#
# Running "bin/buildout" will update your installation,
# installing missing components as necessary.
#
# This will update the add-on products you've added in the eggs= lines.
# This will not, however, upgrade Plone itself (or anything else you've
# pinned with a version specification). To upgrade Plone itself, see the
# comments in "Plone Component Versions".
#
# Tutorial instructions for using zc.buildout for
# configuration management are available at:
# http://plone.org/documentation/tutorial/buildout
# Full details at http://pypi.python.org/pypi/zc.buildout
#
############################################

[buildout]
############################################
# Plone Component Versions
# ------------------------
# This version of the Unified Installer has the components of Plone 4
# preloaded so that it can install without an Internet connection.
# If you want to update, uncomment the "http://..." line below,
# edit it to point to the current version URL, comment out the
# "versions.cfg" line and run "bin/buildout" while attached to the
# Internet. Generally, you only want to do that as part of a planned migration.
# Note that if you are updating components, you should also check the versions
# section at the end of this file, since recipes or components other than
# those of Zope and Plone may need updating at the same time.
#
extends =
    base.cfg
    versions.cfg
#    http://dist.plone.org/release/5.0b2/versions.cfg

# If you change your Plone version, you'll also need to update
# the repository link below.
always-checkout = true
show-picked-versions = true
find-links =
    http://dist.plone.org/release/5.0b2
extensions = mr.developer

# If you try to start Zope as root, it will change user id to run as
# the effective user specified here. This user id must own the var directory
# of your buildout.
effective-user = vagrant
# This user will own the rest of the installation, and should be used to
# run buildout.
buildout-user = vagrant
# A flag to tell the Unified Installer whether or not to document sudo use.
need-sudo = no

############################################
# Eggs
# ----
# Add an indented line to the eggs section for any Python
# eggs or packages you wish to include in your Plone instance.
#
# Note that versions may be specified here or in the [versions]
# section below. You should always specify versions that you know
# are compatible with the Plone release and at an acceptable
# development level.
#
# If you update to a later version of Plone, remove the hotfix.
#
eggs =
    Plone
    Pillow
    diazotheme.mytheme
    dexterityurska.site
     tutorial.todoapp
#     plone.app.dexterity [relations]
#     plone.app.multilingual
    my.news_portlet
############################################
# ZCML Slugs
# ----------
# Some eggs need ZCML slugs to tell Zope to
# use them. This is increasingly rare.
zcml =
#    plone.reload

############################################
# Development Eggs
# ----------------
# You can use paster to create "development eggs" to
# develop new products/themes. Put these in the src/
# directory.
# You will also need to add the egg names in the
# eggs section above, and may also need to add them
# to the zcml section.
#
# Provide the *paths* to the eggs you are developing here:
develop =
    src/diazotheme.mytheme
    src/dexterityurska.site
     src/tutorial.todoapp
    src/my.news_portlet    
#    src/my.package

############################################
# var Directory
# -------------
# Sets the target directory for the "var" components of the install such as
# database and log files.
#
var-dir=${buildout:directory}/var

############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
#
backups-dir=${buildout:var-dir}

############################################
# Initial User
# ------------
# This is the user id and password that will be used to create the initial
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl adduser".
user=admin:admin

############################################
# Debug Options
# -------------
# Start Zope/Plone instances in "fg" mode to turn on debug mode;
# this will dramatically slow Plone.
#
# Add-on developers should turn deprecation warnings on
deprecation-warnings = off
# change verbose-security to "on" for useful security errors while developing
verbose-security = off

############################################
# Parts Specification
#--------------------
# Specifies the components that should be included in the buildout.
# Most are defined in the base.cfg extension; you may add your
# own if you need them at the end of this file.
parts =
    instance
    repozo
    backup
    zopepy
    unifiedinstaller
    paster
    zopeskel
     test
     robot
#    i18ndude
#     translation
# 
[test]
recipe = zc.recipe.testrunner
eggs = dexterityurska.site [test]
       my.news_portlet [test]
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']

[robot]
recipe = zc.recipe.egg
eggs =
    ${instance:eggs}
    Pillow
    plone.app.robotframework[ride,reload,debug]    

#     
# [i18ndude]
# recipe = zc.recipe.egg
# eggs = i18ndude
# ####
# #### #   
# [robot]
# recipe = zc.recipe.egg
# eggs =
#     Pillow
#     ${test:eggs}
#     plone.app.robotframework   
    
####
####
[zopeskel]
# installs paster and Zopeskel
recipe = zc.recipe.egg
eggs =
   PasteScript
   ZopeSkel
   Paste
   PasteDeploy
   zopeskel.diazotheme
   zopeskel.dexterity
   ${instance:eggs}
####
####

[paster]
recipe = zc.recipe.egg
eggs =
   ZopeSkel
   PasteScript
   PasteDeploy
   ${instance:eggs}
entry-points = paster=paste.script.command:running    
    
############################################
# Major Parts
# ----------------------
# These common parts make use of sane base settings from
# base.cfg. To customize a part, just add whatever options
# you need. Read base.cfg for common settings.

[instance]
<= instance_base
recipe = plone.recipe.zope2instance
http-address = 8080
# # 
# [translation]
# recipe = infrae.i18nextract
# packages =
#    dexterityurska.site   
# output = ${buildout:directory}/src/dexterityurska.site/dexterityurska/site/locales
# output-package = dexterityurska.site
# domain = dexterityurska.site

############################################
# Versions Specification
# ----------------------
# Version information supplied here will "pin" Python packages to a particular
# version number, even when you use the "newest" flag running buildout.
# Specifying versions for all packages is a good idea and can prevent
# accidental changes when you add new packages to your buildout.
# Note that versions specified here will override those specified earlier
# in the configuration, including those from the Plone and Zope version
# config files.
#
[versions]
# Use whatever setuptools and zc.buildout versions that are
# available in our Python environment.
setuptools = 12.2
zc.buildout = 2.3.1

buildout.sanitycheck = 1.0b1
collective.recipe.backup = 2.20
plone.recipe.unifiedinstaller = 4.3.1
ply = 3.4
plone.recipe.command = 1.1
plone.recipe.precompiler = 0.6

Products.DocFinderTab = 1.0.5
MarkupSafe = 0.23
bobtemplates.plone = 0.9
mr.bob = 0.1.1
# plone.app.multilingual = 3.0.4
# ############################################
# #
# # Buildout Configuration File for Plone
# # -------------------------------------
# #
# # ALWAYS back up all Plone/Zope data and components
# # before changing configuration.
# #
# # Running "bin/buildout" will update your installation,
# # installing missing components as necessary.
# #
# # This will update the add-on products you've added in the eggs= lines.
# # This will not, however, upgrade Plone itself (or anything else you've
# # pinned with a version specification). To upgrade Plone itself, see the
# # comments in "Plone Component Versions".
# #
# # Tutorial instructions for using zc.buildout for
# # configuration management are available at:
# # http://plone.org/documentation/tutorial/buildout
# # Full details at http://pypi.python.org/pypi/zc.buildout
# #
# ############################################
# 
# [buildout]
# ############################################
# # Plone Component Versions
# # ------------------------
# # This version of the Unified Installer has the components of Plone 4
# # preloaded so that it can install without an Internet connection.
# # If you want to update, uncomment the "http://..." line below,
# # edit it to point to the current version URL, comment out the
# # "versions.cfg" line and run "bin/buildout" while attached to the
# # Internet. Generally, you only want to do that as part of a planned migration.
# # Note that if you are updating components, you should also check the versions
# # section at the end of this file, since recipes or components other than
# # those of Zope and Plone may need updating at the same time.
# #
# extends =
#     base.cfg
#     versions.cfg
# #    http://dist.plone.org/release/5.0b2/versions.cfg
# 
# # If you change your Plone version, you'll also need to update
# # the repository link below.
# find-links +=
#     http://dist.plone.org/release/5.0b2
# 
# # If you try to start Zope as root, it will change user id to run as
# # the effective user specified here. This user id must own the var directory
# # of your buildout.
# effective-user = urska
# # This user will own the rest of the installation, and should be used to
# # run buildout.
# buildout-user = urska
# # A flag to tell the Unified Installer whether or not to document sudo use.
# need-sudo = no
# 
# ############################################
# # Eggs
# # ----
# # Add an indented line to the eggs section for any Python
# # eggs or packages you wish to include in your Plone instance.
# #
# # Note that versions may be specified here or in the [versions]
# # section below. You should always specify versions that you know
# # are compatible with the Plone release and at an acceptable
# # development level.
# #
# # If you update to a later version of Plone, remove the hotfix.
# #
# eggs =
#     Plone
#     Pillow
# 
# ############################################
# # ZCML Slugs
# # ----------
# # Some eggs need ZCML slugs to tell Zope to
# # use them. This is increasingly rare.
# zcml =
# #    plone.reload
# 
# ############################################
# # Development Eggs
# # ----------------
# # You can use paster to create "development eggs" to
# # develop new products/themes. Put these in the src/
# # directory.
# # You will also need to add the egg names in the
# # eggs section above, and may also need to add them
# # to the zcml section.
# #
# # Provide the *paths* to the eggs you are developing here:
# develop =
# #    src/my.package
# 
# ############################################
# # var Directory
# # -------------
# # Sets the target directory for the "var" components of the install such as
# # database and log files.
# #
# var-dir=${buildout:directory}/var
# 
# ############################################
# # Backup Directory
# # ----------------
# # Sets the target directory for the bin/backup and bin/snapshotbackup
# # commands. Default is inside this project's var directory, but ideally
# # this should be on a separate volume or backup server.
# #
# backups-dir=${buildout:var-dir}
# 
# ############################################
# # Initial User
# # ------------
# # This is the user id and password that will be used to create the initial
# # user id that will allow you to log in and create a Plone site. This only
# # sets the initial password; it will not allow you to change an already
# # existing password. If you change the admin password via the web interface,
# # the one below will no longer be valid.
# # If you find yourself locked out of your Zope/Python installation, you may
# # add an emergency user via "bin/plonectl adduser".
# user=admin:XKmR4pZGmONC
# 
# ############################################
# # Debug Options
# # -------------
# # Start Zope/Plone instances in "fg" mode to turn on debug mode;
# # this will dramatically slow Plone.
# #
# # Add-on developers should turn deprecation warnings on
# deprecation-warnings = off
# # change verbose-security to "on" for useful security errors while developing
# verbose-security = off
# 
# ############################################
# # Parts Specification
# #--------------------
# # Specifies the components that should be included in the buildout.
# # Most are defined in the base.cfg extension; you may add your
# # own if you need them at the end of this file.
# parts =
#     instance
#     repozo
#     backup
#     zopepy
#     unifiedinstaller
# 
# ############################################
# # Major Parts
# # ----------------------
# # These common parts make use of sane base settings from
# # base.cfg. To customize a part, just add whatever options
# # you need. Read base.cfg for common settings.
# 
# [instance]
# <= instance_base
# recipe = plone.recipe.zope2instance
# http-address = 8080
# 
# 
# ############################################
# # Versions Specification
# # ----------------------
# # Version information supplied here will "pin" Python packages to a particular
# # version number, even when you use the "newest" flag running buildout.
# # Specifying versions for all packages is a good idea and can prevent
# # accidental changes when you add new packages to your buildout.
# # Note that versions specified here will override those specified earlier
# # in the configuration, including those from the Plone and Zope version
# # config files.
# #
# [versions]
# # Use whatever setuptools and zc.buildout versions that are
# # available in our Python environment.
# setuptools =
# zc.buildout =
# 
# buildout.sanitycheck = 1.0b1
# collective.recipe.backup = 2.20
# plone.recipe.unifiedinstaller = 4.3.1
# ply = 3.4
# plone.recipe.command = 1.1
# plone.recipe.precompiler = 0.6
# 
# Products.DocFinderTab = 1.0.5
# MarkupSafe = 0.23
# bobtemplates.plone = 0.9
# mr.bob = 0.1.1
